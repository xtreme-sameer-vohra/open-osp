services:

    propertieseditor:
      build: ./docker/propertieseditor
      ports:
        - 5000:5000
      volumes:
        - ./docker/propertieseditor:/code
        - ./volumes/oscar.properties:/code/oscar.properties
      env_file:
        - local.env
      restart: always
      networks:
        - back-tier

    nginx:
      restart: 'always'
      image: nginx:latest
      networks:
        - back-tier
      volumes:
        - ./static:/static
        - ./conf/ssl.crt:/ssl/ssl.crt
        - ./conf/ssl.key:/ssl/ssl.key
        - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/oscar.template
      env_file:
        - local.env
      command: sh -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\" < /etc/nginx/conf.d/oscar.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

    health:
      build: docker/health
      volumes:
        - ./docker/health/health.sh:/health.sh
        - ./docker/health/health-checker.sh:/health-checker.sh
        - ./volumes/ssl.crt:/usr/local/tomcat/conf/ssl.crt
        - ./volumes/ssl.key:/usr/local/tomcat/conf/ssl.key
      networks:
        - back-tier
      env_file:
        - local.env

    cpcssn:
      image: osp-extract-linux-container
      env_file: local.env
      environment:
        - CPCSSN_DRY_RUN=true
#        - CPCSSN_SITE=
#        - MYSQL_USER=
#        - MYSQL_PASSWORD=
      networks:
        - back-tier

networks:
  back-tier:
    driver: bridge

